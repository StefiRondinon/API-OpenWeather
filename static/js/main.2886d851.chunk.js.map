{"version":3,"sources":["Components/WeatherInfo.js","Components/WeatherForm.js","App.js","index.js","Components/keys.js"],"names":["WeatherInfo","props","error","className","temperature","city","country","description","humidity","wind_speed","WeatherForm","onSubmit","getWeather","type","name","placeholder","autoFocus","App","state","e","a","preventDefault","target","elements","cityValue","value","countryValue","API_URL","WEATHER_KEY","fetch","response","json","data","setState","main","temp","weather","sys","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"2RAyCeA,EArCK,SAAAC,GAChB,OAEI,gCAEQA,EAAMC,OACN,qBAAKC,UAAU,qBAAf,SACI,kCAAKF,EAAMC,WAIfD,EAAMG,YAEF,sBAAKD,UAAU,iBAAf,UACI,2CAAcF,EAAMI,KAApB,KAA4BJ,EAAMK,WAClC,8CACkBL,EAAMG,YADxB,WAC0CH,EAAMM,eAEhD,2CACeN,EAAMO,SADrB,QAGA,6CACiBP,EAAMQ,iBAK3B,qBAAKN,UAAU,uBCTpBO,G,MAnBK,SAAAT,GAAK,OACrB,sBAAKE,UAAU,yCAAf,UACI,oBAAIA,UAAU,qBAAd,uCACA,uBAAMQ,SAAUV,EAAMW,WAAtB,UACI,qBAAKT,UAAU,kBAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,OAAOC,YAAY,iBAAiBZ,UAAU,eAAea,WAAS,MAElG,qBAAKb,UAAU,kBAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,UAAUC,YAAY,oBAAoBZ,UAAU,mBAEhF,qBAAKA,UAAU,6BAAf,SACI,wBAAQA,UAAU,uBAAlB,mC,OC+CDc,E,4MAtDXC,MAAQ,CACNd,YAAa,GACbG,YAAa,GACbC,SAAU,GACVC,WAAY,EACZJ,KAAM,GACNC,QAAQ,GACRJ,MAAO,M,EAIXU,W,uCAAa,WAAOO,GAAP,6BAAAC,EAAA,yDACXD,EAAEE,iBADS,EAEeF,EAAEG,OAAOC,SAA3BlB,EAFG,EAEHA,KAAMC,EAFH,EAEGA,QACRkB,EAAYnB,EAAKoB,MACjBC,EAAepB,EAAQmB,OAEzBD,IAAaE,EANN,wBAYLC,EAZK,4DAY0DH,EAZ1D,YAYuEE,EAZvE,kBAY6FE,cAZ7F,kCAaYC,MAAMF,GAblB,cAaLG,EAbK,iBAcQA,EAASC,OAdjB,QAcLC,EAdK,OAgBX,EAAKC,SAAS,CACZ7B,YAAa4B,EAAKE,KAAKC,KACvB5B,YAAayB,EAAKI,QAAQ,GAAG7B,YAC7BC,SAASwB,EAAKE,KAAK1B,SACnBC,WAAYuB,EAAKvB,WACjBJ,KAAM2B,EAAKlB,KACXR,QAAS0B,EAAKK,IAAI/B,QAClBJ,MAAO,OAvBE,wBA0BX,EAAK+B,SAAS,CAAC/B,MAAO,uCA1BX,4C,kGA6Bb,WACE,OACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAAaS,WAAY0B,KAAK1B,aAC9B,cAAC,EAAD,eAAiB0B,KAAKpB,mB,GAhDhBqB,aCAlBC,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,U,gBCNlCC,EAAOC,QAAU,CACbjB,YAAa,sC","file":"static/js/main.2886d851.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/WeatherInfo.css';\r\n\r\n\r\nconst WeatherInfo = props => {\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                props.error &&\r\n                <div className=\"alert alert-danger\">\r\n                    <p> {props.error}</p>\r\n                </div>\r\n            }\r\n            {\r\n                props.temperature ?\r\n\r\n                    <div className=\"card card-body\">\r\n                        <p>Location: {props.city}, {props.country}</p>\r\n                        <p>\r\n                            Temperature: {props.temperature} Â°C, {props.description}\r\n                        </p>\r\n                        <p>\r\n                            Humidity: {props.humidity} %\r\n                        </p>\r\n                        <p>\r\n                            Wind speed: {props.wind_speed}\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    :\r\n                    <div className=\"card card body\">\r\n                        \r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default WeatherInfo","import React from 'react';\r\nimport '../styles/WeatherForm.css';\r\n\r\nconst WeatherForm = props => (\r\n    <div className=\"card card-body justify-content-center \">\r\n        <h1 className=\"title text-center \"> The weather of your city</h1>\r\n        <form onSubmit={props.getWeather}>\r\n            <div className=\"form-group mt-2\">\r\n                <input type=\"text\" name=\"city\" placeholder=\"Your city name\" className=\"form-control\" autoFocus></input>\r\n            </div>\r\n            <div className=\"form-group mt-2\">\r\n                <input type=\"text\" name=\"country\" placeholder=\"Your country name\" className=\"form-control\"></input>\r\n            </div>\r\n            <div className=\"d-grid gap-2 col-4 mx-auto\">\r\n                <button className=\"btn btn-primary mt-3\">\r\n                    Get Weather\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n)\r\n\r\nexport default WeatherForm","import React, { Component } from 'react';\nimport WeatherInfo from './Components/WeatherInfo.js';\nimport WeatherForm from './Components/WeatherForm';\nimport {WEATHER_KEY} from './Components/keys'\n\nclass App extends Component {\n\n    state = {\n      temperature: '',\n      description: '',\n      humidity: '',\n      wind_speed: 0,\n      city: '',\n      country:'',\n      error: null\n    };\n\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const { city, country } = e.target.elements;\n    const cityValue = city.value;\n    const countryValue = country.value;\n\n    if (cityValue && countryValue) {\n\n      // setDatos({\n      //   spinner: true,\n      // })\n\n    const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&appid=${WEATHER_KEY}&units=metric&lang=es`;\n    const response = await fetch(API_URL);\n    const data = await response.json();\n\n    this.setState({\n      temperature: data.main.temp,\n      description: data.weather[0].description,\n      humidity:data.main.humidity,\n      wind_speed: data.wind_speed,\n      city: data.name,\n      country: data.sys.country,\n      error: null,\n    });\n  } else {\n    this.setState({error: 'Please enter a city anda a country'})\n  }}\n\n  render() {\n    return (\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mx-auto\">\n            <WeatherForm getWeather={this.getWeather} />\n            <WeatherInfo {...this.state}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,document.getElementById('root')\n);\n\n","module.exports = {\r\n    WEATHER_KEY: 'f2e64014470a10fb27d1d3255ab1d9f5'\r\n\r\n}"],"sourceRoot":""}